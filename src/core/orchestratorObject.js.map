{"version":3,"sources":["directives/queryBuilder/core/orchestratorObject.ts"],"names":[],"mappings":"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","file":"directives/queryBuilder/core/orchestratorObject.js","sourcesContent":["/// <reference path=\"../../../../../../../../typings/moment/moment.d.ts\" />\r\n/// <reference path=\"../../../../../../../../typings/moment/moment-node.d.ts\" />\r\n\r\nimport { QueryElement } from './queryElement';\r\nimport { IOrchestrator } from './orchestrator';\r\nimport { QueryState } from './queryState';\r\n\r\nexport module query.core { \r\n\r\n    export class Types {\r\n      public static get REAL(): string { return \"REAL\" };\r\n      public static get INTEGER(): string { return \"INTEGER\" };\r\n      public static get STRING(): string { return \"STRING\" };\r\n      public static get DATE(): string { return \"DATE\" };\r\n      public static get DATETIME(): string { return \"DATETIME\" };\r\n      public static get DATE_RANGE(): string { return \"DATE_RANGE\" };\r\n      public static get BOOLEAN(): string { return \"BOOLEAN\" };\r\n      public static get RANGE(): string { return \"RANGE\" };\r\n    }\r\n\r\n    class JavascriptTypes {\r\n        public static get STRING(): string { return \"string\" };\r\n    }\r\n\r\n    export class Orchestrator implements IOrchestrator {\r\n      private state: number;\r\n      private valid: number;\r\n\r\n      private queryProp: any;\r\n\r\n      private type: string;\r\n      private dateFormat: string;\r\n      private dateTimeHourMinFormat: string;\r\n      private dateTimeFormat: string;\r\n      private dateTimeMillisecondsFormat: string;\r\n\r\n      private isConcatOperator: boolean;\r\n      private isOrderBy: boolean;\r\n      private hasAdvancedState: boolean;\r\n\r\n      private query: Array<QueryElement>;\r\n      private nextTerms: Array<string>;\r\n      private previousTerms: Array<string>;\r\n      private concatOps: Array<string>;\r\n      private propertyTerms: Array<string>;\r\n\r\n      private propertyMap: Object;\r\n      private operatorMap: Object;\r\n\r\n      private ADVANCED_OPS: Array<string>;\r\n      private ADVANCED_NEGATIVE_OPS: Array<string>;\r\n      private SPECIFIED_OPS: Array<string>;\r\n      private ORDER_BY: string;\r\n\r\n      constructor(propertyMap: Object, operatorMap?: Object, concatOps?: Array<string>) {\r\n        this.state = QueryState.INITIAL;\r\n        this.valid = 0;\r\n        this.type = '';\r\n        this.dateFormat = 'YYYY-MM-DD';\r\n        this.dateTimeFormat = 'YYYY-MM-DDTHH:mm';\r\n        this.dateTimeHourMinFormat = 'YYYY-MM-DDTHH:mm:ss';\r\n        this.dateTimeMillisecondsFormat = 'YYYY-MM-DDTHH:mm:ss.SSSS';\r\n        this.ADVANCED_NEGATIVE_OPS = [\"!IN\", \"NOT IN\", \"!==\"];\r\n        this.SPECIFIED_OPS = [\"BETWEEN\"];\r\n        this.ORDER_BY = 'ORDER BY';\r\n        this.ADVANCED_OPS = [\"IN\", \"==\"].concat(this.ADVANCED_NEGATIVE_OPS);\r\n        this.query = new Array();\r\n        this.concatOps = new Array();\r\n        this.propertyTerms = new Array();\r\n        this.propertyMap = propertyMap;\r\n        this.operatorMap = operatorMap || this.getOperatorsConfig();\r\n\r\n        this.setPropertyTerms();\r\n\r\n        this.ensureMappingObjects(concatOps || this.getConcatOperatorsConfig());\r\n        this.nextTerms = this.propertyTerms;\r\n      }\r\n\r\n      addTerm(term: any): number {\r\n        if ((this.state === QueryState.PROPERTY_MULTIPLE_VALUES && this.validValues(term))\r\n            || (this.state === QueryState.PROPERTY_VALUE && this.validateValuesNoConcatOperators(term))\r\n            || (this.state === QueryState.OPERATOR_TERM && this.validateValue(term))\r\n            || this.validateTerm(term)) {\r\n            this.previousTerms = this.nextTerms;\r\n            this.queryProp = term;\r\n            this.valid = 0;\r\n            if (this.setNextState(term)) {\r\n              if(!Array.isArray(term))\r\n                this.query.push(new QueryElement(this.state === QueryState.PROPERTY_VALUE ? (<string>this.queryProp).toLowerCase() : this.queryProp, this.state, term, this.type, this.getPreviousPosition(), this.previousTerms));\r\n              else\r\n                term.forEach((t: string) => { this.query.push(new QueryElement(t, this.state, t, this.type, this.getPreviousPosition(), this.previousTerms)) });\r\n            }\r\n        }\r\n        return this.state;\r\n      }\r\n\r\n      removeTerm(): number {\r\n        if(this.state != QueryState.INITIAL || this.isOrderBy) {\r\n          this.validDeleteOrderBy();\r\n          this.query.pop();\r\n          this.valid = 0;\r\n          switch(this.state = this.query.length === 0 ? QueryState.INITIAL : this.query[this.query.length-1].type) {\r\n            case QueryState.PROPERTY_TERM:\r\n              this.nextTerms = this.isOrderBy ? this.getDirectionalOrderBy() : this.operatorMap[this.type];\r\n              break;\r\n            case QueryState.OPERATOR_TERM:\r\n              this.nextTerms = [];\r\n              break;\r\n            case QueryState.PROPERTY_VALUE:\r\n              this.valid = this.query[(this.query.length -1) -1].type === QueryState.PROPERTY_MULTIPLE_VALUES ? 0: 1;\r\n              this.nextTerms = this.query[(this.query.length -1) -1].type === QueryState.PROPERTY_VALUE || this.query[(this.query.length -1) -1].type === QueryState.PROPERTY_MULTIPLE_VALUES ? [] : this.concatOps;\r\n              break;\r\n            case QueryState.CONCAT_TERM:\r\n              this.nextTerms = this.propertyTerms;\r\n              break;\r\n            case QueryState.PROPERTY_MULTIPLE_VALUES:\r\n              this.nextTerms = [];\r\n              break;\r\n            default:\r\n              this.hasAdvancedState = false;\r\n              this.nextTerms = this.propertyTerms;\r\n              break;\r\n          }\r\n        }\r\n\r\n        return this.state;\r\n      }\r\n\r\n      removeFromIndex(position: number): number {\r\n        return this.getEndPositionFromRemoveIndex(this.getTermIndexByPosition(position));\r\n      }\r\n\r\n      getCurrentState(): number {\r\n        return this.state;\r\n      }\r\n\r\n      getPreviousState(): number {\r\n          return typeof this.query[(this.query.length - 1) - 1] !== 'undefined' ? \r\n            this.query[(this.query.length - 1) - 1].type : QueryState.INITIAL;\r\n      }\r\n\r\n      isValidQuery(): boolean {\r\n        return Boolean(this.valid);\r\n      }\r\n\r\n      isAdvancedState(): boolean {\r\n        return this.hasAdvancedState;\r\n      }\r\n\r\n      removeAllTerms(): boolean {\r\n        let len = this.query.length;\r\n        for (let idx = 0; idx < len; idx++) {\r\n          this.removeTerm();\r\n        }\r\n        return this.query.length === 0;\r\n      }\r\n\r\n      setNextState(term?: any): boolean {\r\n        switch(this.state) {\r\n            case QueryState.PROPERTY_TERM:\r\n              this.hasAdvancedState = ((this.state = this.isSetOperator(term) ? QueryState.PROPERTY_MULTIPLE_VALUES : QueryState.OPERATOR_TERM) === QueryState.PROPERTY_MULTIPLE_VALUES) || this.getCurrentType() === 'RANGE';\r\n              if(this.isOrderBy) {\r\n                this.state = QueryState.INITIAL;\r\n                this.valid = 1;\r\n              }\r\n              this.nextTerms = this.setNextTermsFromOperator();\r\n              break;\r\n            case QueryState.OPERATOR_TERM:\r\n              this.state = QueryState.PROPERTY_VALUE;\r\n              this.valid = 1;\r\n              this.nextTerms = this.concatOps;\r\n              break;\r\n            case QueryState.PROPERTY_VALUE:\r\n              this.valid = this.hasAdvancedState && (!this.isConcatOperator || typeof term === 'undefined') ? 1 : 0;\r\n              this.state = this.valid ? QueryState.PROPERTY_VALUE : QueryState.CONCAT_TERM;\r\n              this.nextTerms = this.state === QueryState.PROPERTY_VALUE ? this.concatOps : this.propertyTerms;\r\n              this.setOrderBy(term);\r\n              break;\r\n            case QueryState.PROPERTY_MULTIPLE_VALUES:\r\n              this.state = QueryState.PROPERTY_VALUE;\r\n              this.valid = 1;\r\n              this.nextTerms = this.concatOps;\r\n              break;\r\n            default:\r\n              this.state = QueryState.PROPERTY_TERM;\r\n              this.nextTerms = this.setNextTermsFromProperty(term);\r\n              break;\r\n          }\r\n          return true;\r\n      }\r\n\r\n      validValues(terms: any): boolean {\r\n          if(!Array.isArray(terms)) terms = [terms];\r\n          return terms.every((t: string) => {\r\n            return this.validateValue(t);\r\n          });\r\n      }\r\n\r\n      validPropertyValue(position: number, value: string): boolean {\r\n        let query: QueryElement = this.query[this.getTermIndexByPosition(position)];\r\n        if(typeof query === 'undefined' || !(query.type === QueryState.OPERATOR_TERM || query.type === QueryState.PROPERTY_VALUE || query.type === QueryState.PROPERTY_MULTIPLE_VALUES) || value.trim() === '') return false;\r\n        return Boolean(this.validateValue(value, query.propType));\r\n      }\r\n\r\n      getNextTerms(position: number): Array<string> {\r\n        if(this.query.length === 0 || this.query[this.query.length - 1].position.end + 1 === position || position === -1) return this.nextTerms;\r\n        return this.getNextTermsByRangePosition(position);\r\n      }\r\n\r\n      getPropertyMapObject(term: string): any {\r\n        return this.propertyMap[this.queryProp = Object.keys(this.propertyMap).filter((p) => { return this.propertyMap[p].name.toLowerCase() === term.toLowerCase(); })[0]];\r\n      }\r\n\r\n      getQueryProp(): string {\r\n        return this.queryProp;\r\n      }\r\n\r\n      getQuery(): Array<QueryElement> {\r\n        return this.query;\r\n      }\r\n\r\n      getCurrentType(): string {\r\n        return this.type;\r\n      }\r\n\r\n      getIsOrderBy(): boolean {\r\n        return this.isOrderBy;\r\n      }\r\n\r\n      getFullOperators(): Array<string> {\r\n        return ([\"=\", \"IS\", \"!=\", \"!IS\", \"IS NOT\", \"<>\", \">\", \">=\", \"<\", \"<=\", \r\n        \"STARTS WITH\", \"ENDS WITH\", \"!IN\", \"!CONTAINS\", \r\n        \"NOT IN\", \"!==\", \"BETWEEN\", \"IN\", \"CONTAINS\", \"==\"])\r\n        .concat(this.getConcatOperatorsConfig())\r\n        .concat(this.getDirectionalOrderBy());\r\n      }\r\n\r\n      getDirectionalOrderBy(): Array<string> {\r\n        return ([\"ASC\", \"DESC\"]);\r\n      }\r\n\r\n      private setPropertyTerms() {\r\n        for (let p in this.propertyMap) this.propertyTerms.push(this.propertyMap[p].name);\r\n        this.propertyTerms = this.propertyTerms.sort((a: string, b: string): any => {\r\n          return a.toLowerCase().localeCompare(b.toLowerCase());\r\n        });\r\n      }\r\n\r\n      private setOrderBy(term: string): void {\r\n        if(this.state === QueryState.CONCAT_TERM && term === this.ORDER_BY) this.isOrderBy = true;\r\n      }\r\n\r\n      private setNextTermsFromProperty(term: string): Array<string> {\r\n        this.type = this.getPropertyMapObject(term).type;\r\n        if(this.isOrderBy) return this.getDirectionalOrderBy();\r\n        return this.operatorMap[this.type];\r\n      }\r\n\r\n      private getEndPositionFromRemoveIndex(idx: number): number {\r\n        return this.handleRemoveWithIndex(idx, idx === -1 ? 0 : this.query[idx].position.end);\r\n      }\r\n\r\n      private handleRemoveWithIndex(idx: number, endPosition: number): number {\r\n        if(this.query.length === 0 || idx === -1) return 0;\r\n        while(idx < this.query.length) this.removeTerm();\r\n        return endPosition;\r\n      }\r\n\r\n      private setNextTermsFromOperator(): Array<string> {\r\n        if(this.isOrderBy) {\r\n          return this.getFilterPropertyTerms(this.getOrderedProps(this.getTermOrderBy()));\r\n        }\r\n        return [];\r\n      }\r\n\r\n      private getFilterPropertyTerms(orderedProps: Array<string>): Array<string> {\r\n        return this.propertyTerms.filter((x: string): boolean => {\r\n          return orderedProps.indexOf(x) === -1;\r\n        });\r\n      }\r\n\r\n      private getOrderedProps(termOrderBy: QueryElement): Array<string> {\r\n        return this.query.filter((x: QueryElement): boolean => {\r\n          return (x.position.start > termOrderBy.position.end) && x.type === 1;\r\n        }).map((e: QueryElement): any => { return e.text; });\r\n      }\r\n\r\n      private getTermOrderBy(): QueryElement {\r\n        return this.query.find((x: QueryElement): boolean => {\r\n          return x.text === this.ORDER_BY;\r\n        });\r\n      }\r\n\r\n      private validDeleteOrderBy(): void {\r\n        let currentQry = this.query[this.query.length - 1];\r\n        if(currentQry.type === QueryState.CONCAT_TERM && currentQry.text === this.ORDER_BY) this.isOrderBy = false;\r\n      }\r\n\r\n      private ensureMappingObjects(concatOps: Array<string>): void {\r\n        this.mapConcapOperator(concatOps);\r\n        this.mapOperators();\r\n        this.mapProperties();\r\n      }\r\n\r\n      private mapConcapOperator(concatOps: Array<string>): void {\r\n        for (let c in concatOps) {\r\n          this.concatOps.push(concatOps[c]);\r\n        }\r\n      }\r\n\r\n      private mapOperators(): void {\r\n        for (let c in this.operatorMap) {\r\n          let operations = [];\r\n          for (let o in this.operatorMap[c]) {\r\n            operations.push(this.operatorMap[c][o]);\r\n          }\r\n          this.operatorMap[c] = operations;\r\n        }\r\n      }\r\n\r\n      private mapProperties() {\r\n        for (let x in this.propertyMap) {\r\n          var valid: boolean = false;\r\n          for (let p in this.operatorMap) {\r\n            if (p === this.propertyMap[x].type) {\r\n              valid = true;\r\n            }\r\n          }\r\n          if (!valid) throw \"Invalid Operation Definition -- \" + this.propertyMap[x] + \" not defined.\";\r\n        }\r\n      }\r\n\r\n      private validateTerm(term: string): boolean {\r\n        if(Array.isArray(term)) return false;\r\n        return this.nextTerms.map((x: string): any => { return x.toLowerCase() }).indexOf(term.toLowerCase()) != -1;\r\n      }\r\n\r\n      private validateValuesNoConcatOperators(terms: any): boolean {\r\n          if (!(this.isConcatOperator = typeof terms === JavascriptTypes.STRING && this.concatOps.indexOf(terms) > -1)) {\r\n              return this.validValues(terms);\r\n          }\r\n          return this.isConcatOperator;\r\n      }\r\n\r\n      private validateValue(term: string, propType: string = this.type): boolean {\r\n        let cleanTerm: string = term.replace(/((')|(\\[)|(\\()|(\\])|(\\)))/g, '');\r\n        switch(propType) {\r\n          case Types.REAL:\r\n            return parseFloat(cleanTerm).toString() === cleanTerm;\r\n          case Types.INTEGER:\r\n            return parseInt(cleanTerm).toString() === cleanTerm;\r\n          case Types.DATE:\r\n            case Types.DATE_RANGE:\r\n              return this.isValidDate(cleanTerm);\r\n          case Types.DATETIME:\r\n            return this.isValidDate(cleanTerm) || this.isValidDateTime(cleanTerm);\r\n          case Types.STRING:\r\n            return true;\r\n          case Types.BOOLEAN:\r\n            return cleanTerm.toLowerCase() === \"true\" || cleanTerm.toLowerCase() === \"false\";\r\n        }\r\n        throw \"Type not supported\";\r\n      }\r\n\r\n      private isValidDate(date: string): boolean {\r\n        return moment(date, this.dateFormat, true).isValid();\r\n      }\r\n\r\n      private isValidDateTime(dateTime: string): boolean {\r\n          return moment(dateTime, this.dateTimeFormat, true).isValid() || moment(dateTime, this.dateTimeMillisecondsFormat, true).isValid() || moment(dateTime, this.dateTimeHourMinFormat, true).isValid();\r\n      }\r\n      \r\n      private isSetOperator(term: string): boolean {\r\n          return !!(this.ADVANCED_OPS.concat(this.SPECIFIED_OPS).indexOf(term) > -1);\r\n      }\r\n\r\n      private getOperatorsConfig(): Object {\r\n        let PRIMITIVES_OPS = [\"=\", \"IS\", \"!=\", \"!IS\", \"IS NOT\", \"<>\"];\r\n        let NUMBERS_VALID_OPS = Array.prototype.concat(PRIMITIVES_OPS, this.ADVANCED_OPS.concat([\">\", \">=\", \"<\", \"<=\"]).concat(this.SPECIFIED_OPS));\r\n        let STRING_VALID_OPS = Array.prototype.concat(PRIMITIVES_OPS, this.ADVANCED_OPS.concat([\"STARTS WITH\", \"ENDS WITH\", \"CONTAINS\", \"!CONTAINS\"]).concat(this.SPECIFIED_OPS));\r\n        let DATES_VALID_OPS = Array.prototype.concat(PRIMITIVES_OPS, this.ADVANCED_OPS).concat(this.SPECIFIED_OPS);\r\n        let DATES_RANGE_VALID_OPS = DATES_VALID_OPS.concat([\">\", \">=\", \"<\", \"<=\"]);\r\n        let BOOLEAN_VALID_OPS = [\"=\", \"IS\"];\r\n        let RANGE_VALID_OPS = [\"=\", \"IS\", \">\", \">=\", \"<\", \"<=\"];\r\n\r\n        //should match the same types class\r\n        return ({\r\n          REAL: NUMBERS_VALID_OPS,\r\n          INTEGER: NUMBERS_VALID_OPS,\r\n          STRING: STRING_VALID_OPS,\r\n          DATE: DATES_VALID_OPS,\r\n          DATETIME: DATES_VALID_OPS,\r\n          BOOLEAN: BOOLEAN_VALID_OPS,\r\n          RANGE: RANGE_VALID_OPS,\r\n          DATE_RANGE: DATES_RANGE_VALID_OPS\r\n        });\r\n      }\r\n\r\n      private getConcatOperatorsConfig(): Array<string> {\r\n        return ([\"AND\", \"*\", \"OR\", \"+\", \"ORDER BY\"]);\r\n      }\r\n\r\n      private getPreviousPosition(): number {\r\n        return this.query.length === 0 ? -1 : this.query[this.query.length - 1].position.end;\r\n      }\r\n\r\n      private getTermIndexByPosition(position: number) {\r\n        return this.getDataByPosition('findIndex', position);\r\n      }\r\n\r\n      private getNextTermsByRangePosition(position: number) {\r\n        return this.handleNextTerms(this.getDataByPosition('find', position), position);\r\n      }\r\n\r\n      private handleNextTerms(element: QueryElement, position: number): Array<any> {\r\n        if(!element) return this.nextTerms;\r\n        return this.handleNextTermsWithFilter(this.getTermsFiltered(element.nextTerms, \r\n          element.text.substring(0, (position - element.position.start)).toLowerCase()));\r\n      }\r\n\r\n      private handleNextTermsWithFilter(termsFiltered: Array<any>): Array<any> {\r\n        return termsFiltered.length > 1 ? termsFiltered : [];\r\n      }\r\n\r\n      private getTermsFiltered(nextTerms: Array<string>, item: string): Array<string> {\r\n        return nextTerms.filter((x: string): boolean => {\r\n          return x.toLowerCase().indexOf(item) > -1;\r\n        });\r\n      }\r\n\r\n      private getDataByPosition(method: string, position: number): any {\r\n        return this.query[method]((x: QueryElement): boolean => {\r\n          return x.position.start <= position && x.position.end >= position\r\n        });\r\n      }\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}