{"version":3,"sources":["directives/queryBuilder/typeahead.directive.ts"],"names":[],"mappings":"AAEA,IAAO,OAAO,CAqDb;AArDD,WAAO,OAAO,EAAC,CAAC;IACZ,YAAY,CAAC;IAIb,OAAO;SACF,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC;SACrC,SAAS,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;IAEvC,SAAS,CAAC,OAAO,GAAG,CAAC,UAAU,CAAC,CAAA;IAChC,mBAAmB,QAAQ;QACvB,IAAI,SAAS,GAAmB;YAC5B,OAAO,EAAE,SAAS;YAClB,IAAI,EAAE,UAAS,KAAK,EAAE,OAA4B,EAAE,KAAqB,EAAE,UAAU;gBACnF,IAAI,YAAY,GAAG,CAAC,CAAC;gBAErB,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE;oBACpB,UAAU,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;oBAC7B,QAAQ,CAAC;wBACP,UAAU,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;oBAChC,CAAC,EAAE,GAAG,CAAC,CAAC;gBACV,CAAC,CAAC,CAAA;gBACF,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,UAAC,CAAC;oBACtB,EAAE,CAAA,CAAC,CAAC,CAAC,OAAO,KAAK,QAAQ,CAAC,UAAU,IAAI,CAAC,CAAC,OAAO,KAAK,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;wBACzE,QAAQ,CAAC;4BACP,EAAE,CAAA,CAAC,YAAY,KAAK,KAAK,CAAC,gBAAgB,CAAC,YAAY,CAAC,eAAe,EAAE,IAAI,YAAY,KAAK,CAAC,IAAI,YAAY,KAAK,CAAC,CAAC,CAAC,CAAC;gCACpH,YAAY,GAAG,KAAK,CAAC,gBAAgB,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC;gCACrE,UAAU,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;4BAClC,CAAC;wBACH,CAAC,EAAE,GAAG,CAAC,CAAC;oBACV,CAAC;oBACD,EAAE,CAAA,CAAC,CAAC,CAAC,OAAO,KAAK,QAAQ,CAAC,QAAQ,IAAI,CAAC,CAAC,OAAO,KAAK,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;wBACvE,UAAU,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;wBAC7B,QAAQ,CAAC;4BACP,UAAU,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;wBAChC,CAAC,EAAE,GAAG,CAAC,CAAC;oBACV,CAAC;oBACD,EAAE,CAAA,CAAC,CAAC,CAAC,OAAO,KAAK,QAAQ,CAAC,cAAc,IAAI,CAAC,CAAC,OAAO,KAAK,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;wBAC5E,UAAU,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;wBAC7B,QAAQ,CAAC;4BACL,YAAY,GAAG,KAAK,CAAC,gBAAgB,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC;4BACrE,UAAU,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;wBAClC,CAAC,EAAE,GAAG,CAAC,CAAC;oBACZ,CAAC;gBACH,CAAC,CAAC,CAAC;gBACH,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE;oBACnB,UAAU,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;gBAC/B,CAAC,CAAC,CAAC;YACL,CAAC;SACJ,CAAC;QAEF,MAAM,CAAC,SAAS,CAAC;IACrB,CAAC;AACL,CAAC,EArDM,OAAO,KAAP,OAAO,QAqDb","file":"directives/queryBuilder/typeahead.directive.js","sourcesContent":["/// <reference path=\"../../../../../../../typings/angularjs/angular.d.ts\" />\r\n\r\nmodule widgets {\r\n    'use strict';\r\n    declare var CPALS: any;\r\n    declare var KeyCodes: any;\r\n\r\n    angular\r\n        .module(CPALS.modules.directives.MAIN)\r\n        .directive('typeahead', typeahead);\r\n\r\n    typeahead.$inject = ['$timeout']\r\n    function typeahead($timeout): ng.IDirective {\r\n        var directive = <ng.IDirective> {\r\n            require: 'ngModel',\r\n            link: function(scope, element: ng.IAugmentedJQuery, attrs: ng.IAttributes, controller) {\r\n              var currentState = 0;\r\n\r\n              element.bind('click', () => {\r\n                controller.$setViewValue('');\r\n                $timeout(() => {\r\n                  controller.$setViewValue(' ');\r\n                }, 500);\r\n              })\r\n              element.bind('keyup', (e) => {\r\n                if(e.keyCode === KeyCodes.KEY_RETURN || e.keyCode === KeyCodes.KEY_SPACE) {\r\n                  $timeout(() => {\r\n                    if(currentState !== scope.queryBuilderCtrl.orchestrator.getCurrentState() || currentState === 1 || currentState === 3) {\r\n                        currentState = scope.queryBuilderCtrl.orchestrator.getCurrentState();\r\n                        controller.$setViewValue(' ');\r\n                    }\r\n                  }, 250);\r\n                }\r\n                if(e.keyCode === KeyCodes.KEY_LEFT || e.keyCode === KeyCodes.KEY_RIGHT) {\r\n                  controller.$setViewValue('');\r\n                  $timeout(() => {\r\n                    controller.$setViewValue(' ');\r\n                  }, 500);\r\n                }\r\n                if(e.keyCode === KeyCodes.KEY_BACK_SPACE || e.keyCode === KeyCodes.KEY_DELETE) {\r\n                    controller.$setViewValue('');\r\n                    $timeout(() => {\r\n                        currentState = scope.queryBuilderCtrl.orchestrator.getCurrentState();\r\n                        controller.$setViewValue(' ');\r\n                    }, 500);\r\n                }\r\n              });\r\n              element.bind('blur', function() {\r\n                controller.$setViewValue('');\r\n              });\r\n            }\r\n        };\r\n\r\n        return directive;\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}